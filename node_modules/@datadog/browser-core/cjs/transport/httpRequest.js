"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpRequest = void 0;
var telemetry_1 = require("../domain/telemetry");
/**
 * Use POST request without content type to:
 * - avoid CORS preflight requests
 * - allow usage of sendBeacon
 *
 * multiple elements are sent separated by \n in order
 * to be parsed correctly without content type header
 */
var HttpRequest = /** @class */ (function () {
    function HttpRequest(endpointBuilder, bytesLimit) {
        this.endpointBuilder = endpointBuilder;
        this.bytesLimit = bytesLimit;
    }
    HttpRequest.prototype.send = function (data, bytesCount) {
        var url = this.endpointBuilder.build();
        var canUseBeacon = !!navigator.sendBeacon && bytesCount < this.bytesLimit;
        if (canUseBeacon) {
            try {
                var isQueued = navigator.sendBeacon(url, data);
                if (isQueued) {
                    return;
                }
            }
            catch (e) {
                reportBeaconError(e);
            }
        }
        var request = new XMLHttpRequest();
        request.open('POST', url, true);
        request.send(data);
    };
    return HttpRequest;
}());
exports.HttpRequest = HttpRequest;
var hasReportedBeaconError = false;
function reportBeaconError(e) {
    if (!hasReportedBeaconError) {
        hasReportedBeaconError = true;
        (0, telemetry_1.addTelemetryError)(e);
    }
}
//# sourceMappingURL=httpRequest.js.map